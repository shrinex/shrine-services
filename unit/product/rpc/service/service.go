// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package service

import (
	"context"

	"unit/product/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddBrandInput        = pb.AddBrandInput
	AddBrandOutput       = pb.AddBrandOutput
	AddCategoryInput     = pb.AddCategoryInput
	AddCategoryOutput    = pb.AddCategoryOutput
	Attr                 = pb.Attr
	AttrValue            = pb.AttrValue
	Brand                = pb.Brand
	Category             = pb.Category
	CategoryNode         = pb.CategoryNode
	EditBrandInput       = pb.EditBrandInput
	EditBrandOutput      = pb.EditBrandOutput
	EditCategoryInput    = pb.EditCategoryInput
	EditCategoryOutput   = pb.EditCategoryOutput
	ListCategoriesInput  = pb.ListCategoriesInput
	ListCategoriesOutput = pb.ListCategoriesOutput
	RemoveBrandInput     = pb.RemoveBrandInput
	RemoveBrandOutput    = pb.RemoveBrandOutput
	RemoveCategoryInput  = pb.RemoveCategoryInput
	RemoveCategoryOutput = pb.RemoveCategoryOutput

	Service interface {
		// ListCategories 查询所有分类
		ListCategories(ctx context.Context, in *ListCategoriesInput, opts ...grpc.CallOption) (*ListCategoriesOutput, error)
		// AddCategory 添加分类
		AddCategory(ctx context.Context, in *AddCategoryInput, opts ...grpc.CallOption) (*AddCategoryOutput, error)
		// EditCategory 编辑分类
		EditCategory(ctx context.Context, in *EditCategoryInput, opts ...grpc.CallOption) (*EditCategoryOutput, error)
		// RemoveCategory 删除分类
		RemoveCategory(ctx context.Context, in *RemoveCategoryInput, opts ...grpc.CallOption) (*RemoveCategoryOutput, error)
		// AddBrand 添加品牌
		AddBrand(ctx context.Context, in *AddBrandInput, opts ...grpc.CallOption) (*AddBrandOutput, error)
		// EditBrand 编辑品牌
		EditBrand(ctx context.Context, in *EditBrandInput, opts ...grpc.CallOption) (*EditBrandOutput, error)
		// RemoveBrand 删除品牌
		RemoveBrand(ctx context.Context, in *RemoveBrandInput, opts ...grpc.CallOption) (*RemoveBrandOutput, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

// ListCategories 查询所有分类
func (m *defaultService) ListCategories(ctx context.Context, in *ListCategoriesInput, opts ...grpc.CallOption) (*ListCategoriesOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.ListCategories(ctx, in, opts...)
}

// AddCategory 添加分类
func (m *defaultService) AddCategory(ctx context.Context, in *AddCategoryInput, opts ...grpc.CallOption) (*AddCategoryOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.AddCategory(ctx, in, opts...)
}

// EditCategory 编辑分类
func (m *defaultService) EditCategory(ctx context.Context, in *EditCategoryInput, opts ...grpc.CallOption) (*EditCategoryOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.EditCategory(ctx, in, opts...)
}

// RemoveCategory 删除分类
func (m *defaultService) RemoveCategory(ctx context.Context, in *RemoveCategoryInput, opts ...grpc.CallOption) (*RemoveCategoryOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.RemoveCategory(ctx, in, opts...)
}

// AddBrand 添加品牌
func (m *defaultService) AddBrand(ctx context.Context, in *AddBrandInput, opts ...grpc.CallOption) (*AddBrandOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.AddBrand(ctx, in, opts...)
}

// EditBrand 编辑品牌
func (m *defaultService) EditBrand(ctx context.Context, in *EditBrandInput, opts ...grpc.CallOption) (*EditBrandOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.EditBrand(ctx, in, opts...)
}

// RemoveBrand 删除品牌
func (m *defaultService) RemoveBrand(ctx context.Context, in *RemoveBrandInput, opts ...grpc.CallOption) (*RemoveBrandOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.RemoveBrand(ctx, in, opts...)
}
