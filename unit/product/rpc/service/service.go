// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package service

import (
	"context"

	"unit/product/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Category             = pb.Category
	CategoryNode         = pb.CategoryNode
	ListCategoriesInput  = pb.ListCategoriesInput
	ListCategoriesOutput = pb.ListCategoriesOutput

	Service interface {
		// ListCategories 查询所有分类
		ListCategories(ctx context.Context, in *ListCategoriesInput, opts ...grpc.CallOption) (*ListCategoriesOutput, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

// ListCategories 查询所有分类
func (m *defaultService) ListCategories(ctx context.Context, in *ListCategoriesInput, opts ...grpc.CallOption) (*ListCategoriesOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.ListCategories(ctx, in, opts...)
}
