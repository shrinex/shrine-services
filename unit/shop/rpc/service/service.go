// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package service

import (
	"context"

	"unit/shop/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddShopInput  = pb.AddShopInput
	AddShopOutput = pb.AddShopOutput
	Shop          = pb.Shop

	Service interface {
		// AddShop 创建店铺
		AddShop(ctx context.Context, in *AddShopInput, opts ...grpc.CallOption) (*AddShopOutput, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

// AddShop 创建店铺
func (m *defaultService) AddShop(ctx context.Context, in *AddShopInput, opts ...grpc.CallOption) (*AddShopOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.AddShop(ctx, in, opts...)
}
