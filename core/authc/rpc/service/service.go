// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package service

import (
	"context"

	"core/authc/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginInput  = pb.LoginInput
	LoginOutput = pb.LoginOutput

	Service interface {
		// Login 用户登录
		Login(ctx context.Context, in *LoginInput, opts ...grpc.CallOption) (*LoginOutput, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

// Login 用户登录
func (m *defaultService) Login(ctx context.Context, in *LoginInput, opts ...grpc.CallOption) (*LoginOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
