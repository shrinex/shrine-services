// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package service

import (
	"context"

	"core/authc/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddAdminAccountInput  = pb.AddAdminAccountInput
	AddAdminAccountOutput = pb.AddAdminAccountOutput
	LoginInput            = pb.LoginInput
	LoginOutput           = pb.LoginOutput
	RegisterInput         = pb.RegisterInput
	RegisterOutput        = pb.RegisterOutput

	Service interface {
		// Login 用户登录
		Login(ctx context.Context, in *LoginInput, opts ...grpc.CallOption) (*LoginOutput, error)
		// Register 用户注册
		Register(ctx context.Context, in *RegisterInput, opts ...grpc.CallOption) (*RegisterOutput, error)
		// AddAdminAccount 添加商家端管理员用户
		AddAdminAccount(ctx context.Context, in *AddAdminAccountInput, opts ...grpc.CallOption) (*AddAdminAccountOutput, error)
		// AddAdminAccountConfirm 添加商家端管理员用户确认
		AddAdminAccountConfirm(ctx context.Context, in *AddAdminAccountInput, opts ...grpc.CallOption) (*AddAdminAccountOutput, error)
		// AddAdminAccountCancel 添加商家端管理员用户回滚
		AddAdminAccountCancel(ctx context.Context, in *AddAdminAccountInput, opts ...grpc.CallOption) (*AddAdminAccountOutput, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

// Login 用户登录
func (m *defaultService) Login(ctx context.Context, in *LoginInput, opts ...grpc.CallOption) (*LoginOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

// Register 用户注册
func (m *defaultService) Register(ctx context.Context, in *RegisterInput, opts ...grpc.CallOption) (*RegisterOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// AddAdminAccount 添加商家端管理员用户
func (m *defaultService) AddAdminAccount(ctx context.Context, in *AddAdminAccountInput, opts ...grpc.CallOption) (*AddAdminAccountOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.AddAdminAccount(ctx, in, opts...)
}

// AddAdminAccountConfirm 添加商家端管理员用户确认
func (m *defaultService) AddAdminAccountConfirm(ctx context.Context, in *AddAdminAccountInput, opts ...grpc.CallOption) (*AddAdminAccountOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.AddAdminAccountConfirm(ctx, in, opts...)
}

// AddAdminAccountCancel 添加商家端管理员用户回滚
func (m *defaultService) AddAdminAccountCancel(ctx context.Context, in *AddAdminAccountInput, opts ...grpc.CallOption) (*AddAdminAccountOutput, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.AddAdminAccountCancel(ctx, in, opts...)
}
