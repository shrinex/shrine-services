// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package server

import (
	"context"

	"core/authc/rpc/internal/logic"
	"core/authc/rpc/internal/svc"
	"core/authc/rpc/pb"
)

type ServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedServiceServer
}

func NewServiceServer(svcCtx *svc.ServiceContext) *ServiceServer {
	return &ServiceServer{
		svcCtx: svcCtx,
	}
}

// Login 用户登录
func (s *ServiceServer) Login(ctx context.Context, in *pb.LoginInput) (*pb.LoginOutput, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// Register 用户注册
func (s *ServiceServer) Register(ctx context.Context, in *pb.RegisterInput) (*pb.RegisterOutput, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// AddAdminAccount 添加商家端管理员用户
func (s *ServiceServer) AddAdminAccount(ctx context.Context, in *pb.AddAdminAccountInput) (*pb.AddAdminAccountOutput, error) {
	l := logic.NewAddAdminAccountLogic(ctx, s.svcCtx)
	return l.AddAdminAccount(in)
}

// AddAdminAccountConfirm 添加商家端管理员用户确认
func (s *ServiceServer) AddAdminAccountConfirm(ctx context.Context, in *pb.AddAdminAccountInput) (*pb.AddAdminAccountOutput, error) {
	l := logic.NewAddAdminAccountConfirmLogic(ctx, s.svcCtx)
	return l.AddAdminAccountConfirm(in)
}

// AddAdminAccountCancel 添加商家端管理员用户回滚
func (s *ServiceServer) AddAdminAccountCancel(ctx context.Context, in *pb.AddAdminAccountInput) (*pb.AddAdminAccountOutput, error) {
	l := logic.NewAddAdminAccountCancelLogic(ctx, s.svcCtx)
	return l.AddAdminAccountCancel(in)
}
