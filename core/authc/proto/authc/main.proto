// grpcui -plaintext localhost:9001

// mkdir ./rpc/pb
// protoc -I "./proto/authc" -I "../../std/proto" --go_out="paths=source_relative:./rpc/pb" --validate_out="lang=go,paths=source_relative:./rpc/pb" main.proto
// goctl rpc protoc "./proto/authc/main.proto" --go_out=./rpc --go-grpc_out=./rpc --zrpc_out=./rpc --style=go_zero -I . -I "../../std/proto"

syntax = "proto3";

package shrine.authc;

option go_package = "./pb";

import "validate/validate.proto";

message LoginInput {
  int64 sysType = 1 [(validate.rules).int64 = {in: [1, 2, 3]}];
  string username = 2 [(validate.rules).string.pattern = "^[a-zA-Z0-9]{5,8}$"];
  string password = 3 [(validate.rules).string.pattern = "^[@$_a-zA-Z0-9]{5,8}$"];
}

message LoginOutput {
  int64 accountId = 1; // 唯一ID
  string username = 2; // 用户名
  int64 userId = 3; // 关联的用户ID
  int64 shopId = 4; // 所属店铺
  int64 sysType = 5; // 系统类型: 1-平台端,2-商家端,3-普通用户
  int64 isAdmin = 6; // 是否是管理员
}

message RegisterInput {
  int64 sysType = 1 [(validate.rules).int64 = {in: [1, 2, 3]}];
  string username = 2 [(validate.rules).string.pattern = "^[a-zA-Z0-9]{5,8}$"];
  string password = 3 [(validate.rules).string.pattern = "^[@$_a-zA-Z0-9]{5,8}$"];
  int64 shopId = 4 [(validate.rules).int64.gte = 0]; // 所属店铺
}

message RegisterOutput {
  int64 accountId = 1;
  int64 userId = 2;
}

message AddAdminAccountInput {
  string username = 1 [(validate.rules).string.pattern = "^[a-zA-Z0-9]{5,8}$"];
  string password = 2 [(validate.rules).string.pattern = "^[@$_a-zA-Z0-9]{5,8}$"];
  int64 shopId = 3 [(validate.rules).int64.gte = 0]; // 所属店铺
}

message AddAdminAccountOutput {
  int64 accountId = 1;
  int64 userId = 2;
}

service Service {
  // Login 用户登录
  rpc Login(LoginInput) returns(LoginOutput);

  // Register 用户注册
  rpc Register(RegisterInput) returns(RegisterOutput);

  // AddAdminAccount 添加商家端管理员用户
  rpc AddAdminAccount(AddAdminAccountInput) returns(AddAdminAccountOutput);

  // AddAdminAccountConfirm 添加商家端管理员用户确认
  rpc AddAdminAccountConfirm(AddAdminAccountInput) returns(AddAdminAccountOutput);

  // AddAdminAccountCancel 添加商家端管理员用户回滚
  rpc AddAdminAccountCancel(AddAdminAccountInput) returns(AddAdminAccountOutput);
}