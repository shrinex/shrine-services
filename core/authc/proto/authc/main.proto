// grpcui -plaintext localhost:9001

// mkdir ./rpc/pb
// protoc -I "./proto/authc" -I "../../std/proto" --go_out="paths=source_relative:./rpc/pb" --validate_out="lang=go,paths=source_relative:./rpc/pb" main.proto
// goctl rpc protoc "./proto/authc/main.proto" --go_out=./rpc --go-grpc_out=./rpc --zrpc_out=./rpc --style=go_zero -I . -I "../../std/proto"

syntax = "proto3";

package shrine.authc;

option go_package = "./pb";

import "validate/validate.proto";

message User {
  int64 userId = 1; // 用户ID
  int64 shopId = 2; // 所属店铺
  int64 sysType = 3; // 系统类型: 1-平台端,2-商家端,3-普通用户
  string nickname = 4; // 昵称
  string avatar = 5; // 头像
  string intro = 6; // 自我介绍
  int64 enabled = 7; // 启用、禁用
  int64 createTime = 8; // 创建时间
}

message LoginInput {
  int64 sysType = 1 [(validate.rules).int64 = {in: [1, 2, 3]}];
  string username = 2 [(validate.rules).string.pattern = "^[a-zA-Z0-9]{5,8}$"];
  string password = 3 [(validate.rules).string.pattern = "^[@$_a-zA-Z0-9]{5,8}$"];
}

message LoginOutput {
  int64 accountId = 1; // 唯一ID
  string username = 2; // 用户名
  int64 userId = 3; // 关联的用户ID
  int64 shopId = 4; // 所属店铺
  int64 sysType = 5; // 系统类型: 1-平台端,2-商家端,3-普通用户
  int64 isAdmin = 6; // 是否是管理员
}

message RegisterInput {
  int64 sysType = 1 [(validate.rules).int64 = {in: [1, 2, 3]}];
  string username = 2 [(validate.rules).string.pattern = "^[a-zA-Z0-9]{5,8}$"];
  string password = 3 [(validate.rules).string.pattern = "^[@$_a-zA-Z0-9]{5,8}$"];
  int64 shopId = 4 [(validate.rules).int64.gte = 0]; // 所属店铺
}

message RegisterOutput {
  int64 accountId = 1;
  int64 userId = 2;
}

message AddAdminAccountInput {
  string username = 1 [(validate.rules).string.pattern = "^[a-zA-Z0-9]{5,8}$"];
  string password = 2 [(validate.rules).string.pattern = "^[@$_a-zA-Z0-9]{5,8}$"];
  int64 shopId = 3 [(validate.rules).int64.gte = 0]; // 所属店铺
}

message AddAdminAccountOutput {
  int64 accountId = 1;
  int64 userId = 2;
}

message EditUserInput {
  int64 userId = 1 [(validate.rules).int64.gte = 0]; // 用户ID
  string nickname = 2 [(validate.rules).string.pattern = "^[a-zA-Z0-9\u4e00-\u9fa5]{1,12}$"]; // 昵称
  string avatar = 3 [(validate.rules).string.pattern = "^[/\\-?=_.a-zA-Z0-9]{1,128}$"]; // 头像
  string intro = 4 [(validate.rules).string.pattern = "^[!！?？,，.。:：;；\\-——a-zA-Z0-9\u4e00-\u9fa5]{1,36}$"]; // 自我介绍
  int64 enabled = 5 [(validate.rules).int64 = {in: [0, 1]}]; // 启用、禁用
}

message EditUserOutput {
}

message GetUserInput {
  int64 userId = 1 [(validate.rules).int64.gte = 0]; // 用户ID
}

message GetUserOutput {
  User user = 1;
}

message PageUsersInput {
  int64 pageNo = 1 [(validate.rules).int64.gte = 1];
  int64 pageSize = 2 [(validate.rules).int64 = {gte: 1, lte: 100}];
  int64 shopId = 3 [(validate.rules).int64.gte = 0]; // 所属店铺
  int64 sysType = 4 [(validate.rules).int64 = {in: [1, 2, 3]}]; // 系统类型: 1-平台端,2-商家端,3-普通用户
  string nickname = 5 [(validate.rules).string.pattern = "^[a-zA-Z0-9\u4e00-\u9fa5]{1,12}$"]; // 昵称
}

message PageUsersOutput {
  int64 pages = 1; // 总页数
  int64 total = 2; // 总条数
  repeated User rows = 3;
}

service Service {
  // Login 用户登录
  rpc Login(LoginInput) returns(LoginOutput);

  // Register 用户注册
  rpc Register(RegisterInput) returns(RegisterOutput);

  // AddAdminAccount 添加商家端管理员用户
  rpc AddAdminAccount(AddAdminAccountInput) returns(AddAdminAccountOutput);

  // AddAdminAccountConfirm 添加商家端管理员用户确认
  rpc AddAdminAccountConfirm(AddAdminAccountInput) returns(AddAdminAccountOutput);

  // AddAdminAccountCancel 添加商家端管理员用户回滚
  rpc AddAdminAccountCancel(AddAdminAccountInput) returns(AddAdminAccountOutput);

  // EditUser 编辑用户信息
  rpc EditUser(EditUserInput) returns(EditUserOutput);

  // GetUser 获取用户信息
  rpc GetUser(GetUserInput) returns(GetUserOutput);

  // PageUsers 分页获取用户列表
  rpc PageUsers(PageUsersInput) returns(PageUsersOutput);
}